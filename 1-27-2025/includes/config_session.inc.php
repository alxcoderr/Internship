<?php

ini_set('session.use_only_cookie', 1); //Ensures that PHP sessions only use cookies to store session IDs, instead of allowing session IDs to be passed via URL (e.g., in the query string).
ini_set('session.use_strict_mode', 1); //Enables strict session mode, which ensures that PHP accepts only valid session IDs that were generated by the server.

// Configure the session cookie parameters
session_set_cookie_params([
    'lifetime' => 1800, // The lifetime of the session cookie in seconds (30 minutes).
    'domain' => 'localhost', // The domain where the cookie is available (e.g., 'example.com' for production).
    'path' => '/', // The cookie is available on the entire site, including all paths and subdirectories.
    'secure' => true, // Ensures the cookie is sent only over HTTPS, enhancing security.
    'httponly' => true // Restricts cookie access to HTTP(S) protocols, preventing JavaScript access (protects against XSS attacks).
]);

session_start();

if (isset($_SESSION["user_id"])) {
    if (!isset($_SESSION["last_regeneration"]))
    {
        regenerate_session_id_loggedin();
    }
    
    else
    {
        $interval = 60 * 30;
        if (time() - $_SESSION["last_regeneration"] >= $interval) {
            regenerate_session_id_loggedin();
        }
    }

} else {
    if (!isset($_SESSION["last_regeneration"]))
    {
        regenerate_session_id();
    }
    
    else
    {
        $interval = 60 * 30;
        if (time() - $_SESSION["last_regeneration"] >= $interval) {
            regenerate_session_id();
        }
    }
}

function regenerate_session_id_loggedin(){
    session_regenerate_id(true);

    $userId = $_SESSION["user_id"];
    $newSessionId = session_create_id();
    $sessionId = $newSessionId . "_" . $userId;
    session_id($sessionId);

    $_SESSION["last_regeneration"] = time();
}

function regenerate_session_id(){
    session_regenerate_id(true);
    $_SESSION["last_regeneration"] = time();
}

